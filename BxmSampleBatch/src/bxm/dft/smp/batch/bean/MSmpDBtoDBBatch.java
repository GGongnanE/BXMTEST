package bxm.dft.smp.batch.bean;

import bxm.container.annotation.BxmBean;
import bxm.context.das.DasUtils;
import bxm.dft.context.DefaultApplicationContext;
import bxm.dft.smp.batch.bean.dto.MSmpDBtoDBBatch01Dto;
import bxm.dft.smp.batch.bean.dto.MSmpDBtoDBBatch02Dto;
import bxm.dft.smp.batch.dbio.DSmpEmpTmp001;
import bxm.dft.smp.batch.dbio.DSmpEmpTst001;
import bxm.dft.smp.batch.dbio.dto.DSmpEmpTmp001Dto;
import bxm.dft.smp.batch.dbio.dto.DSmpEmpTst001selectList01InDto;
import bxm.dft.smp.batch.dbio.dto.DSmpEmpTst001selectList01OutDto;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.batch.item.ItemProcessor;
import org.springframework.batch.item.ItemReader;
import org.springframework.batch.item.ItemStream;
import org.springframework.batch.item.ItemStreamException;
import org.springframework.batch.item.ItemWriter;
import org.springframework.batch.item.NonTransientResourceException;
import org.springframework.batch.item.ParseException;
import org.springframework.batch.item.UnexpectedInputException;
import org.springframework.context.annotation.Scope;

import bxm.batch.dft.context.DefaultBatchApplicationContext;
import bxm.common.annotaion.BxmCategory;
import bxm.common.util.StringUtils;

/**
 * <b>BXM Business class</b>
 * <p>
 * <b>Revision history</b><br>
 * <pre>
 * 2021.01.05 : New creation  *******7778889999999
 * </pre>
 *
 * @since 2021.01.05
 * @version 1.0.0
 * @author bankware
 */
@BxmBean("MSmpDBtoDBBatch")
@Scope("step")
@BxmCategory(logicalName = "DB to DB 샘플", author = "bankware")
public class MSmpDBtoDBBatch implements ItemStream, ItemReader<MSmpDBtoDBBatch01Dto>, ItemProcessor<MSmpDBtoDBBatch01Dto, MSmpDBtoDBBatch02Dto>, 
																			 ItemWriter<MSmpDBtoDBBatch02Dto> {
	
	private final Logger logger = LoggerFactory.getLogger(this.getClass());
	
	/** DBIO */
	private DSmpEmpTst001 dSmpEmpTst001;	// 조회
	private DSmpEmpTmp001 dSmpEmpTmp001;	// 입력
	
	private Iterator<DSmpEmpTst001selectList01OutDto> iterator;
	

	@Override
	@BxmCategory(logicalName = "")
	public void open(ExecutionContext arg0) throws ItemStreamException {
		
		if( dSmpEmpTst001 == null ) {
			dSmpEmpTst001 = DefaultApplicationContext.getBean(DSmpEmpTst001.class);
		}
		
		/**
		 * 	배치 입력파라미터 deptNo Get
		 **/
		
		String feduDeptNo = DefaultBatchApplicationContext.getJobParameter("deptNo");
		
		if(StringUtils.isEmpty(feduDeptNo)) {
			throw new ItemStreamException("배치 아규먼트 'deptNo' 값이 존재하지 않습니다. ");
		}
		
		/**
		 * 	입력받은 "deptNo"에 대하여 샘플용 직원정보를 Iterator로 가져온다. 
		 **/
		
		DSmpEmpTst001selectList01InDto inDto = new DSmpEmpTst001selectList01InDto();
		inDto.setFeduDeptNo(Integer.parseInt(feduDeptNo));
		iterator = dSmpEmpTst001.selectList001(inDto).iterator();
		
	}

	@Override
	@BxmCategory(logicalName = "")
	public void update(ExecutionContext arg0) throws ItemStreamException {
		
	}
	
	@Override
	@BxmCategory(logicalName = "")
	public MSmpDBtoDBBatch01Dto read() throws Exception, UnexpectedInputException, ParseException, NonTransientResourceException {
		
		MSmpDBtoDBBatch01Dto out = null;
		
		if(iterator.hasNext()) {
			
			out = new MSmpDBtoDBBatch01Dto();
			DSmpEmpTst001selectList01OutDto input = iterator.next();
			
			// Generated by code generator [[
			out.setFeduEmpNo(input.getFeduEmpNo());// set [FW샘플 임직원번호]
			out.setFeduEmpNm(input.getFeduEmpNm());// set [FW샘플 임직원명]
			out.setFeduOccpNm(input.getFeduOccpNm());// set [FW샘플 직업명]
			out.setFeduMngrEmpNo(input.getFeduMngrEmpNo());// set [FW샘플 관리자임직원번호]
			out.setFeduHireDt(input.getFeduHireDt());// set [FW샘플 입사일자]
			out.setFeduPayAmt(input.getFeduPayAmt());// set [FW샘플 급여금액]
			out.setFeduDeptNo(input.getFeduDeptNo());// set [FW샘플 부서번호]
			// Generated by code generator ]]
		}
		
		return out;
	}
	
	@Override
	@BxmCategory(logicalName = "")
	public MSmpDBtoDBBatch02Dto process(MSmpDBtoDBBatch01Dto in) throws Exception {
		
		MSmpDBtoDBBatch02Dto out = new MSmpDBtoDBBatch02Dto();
		
		// Generated by code generator [[
		out.setFeduEmpNo(in.getFeduEmpNo());// set [FW샘플 임직원번호]
		out.setFeduEmpNm(in.getFeduEmpNm());// set [FW샘플 임직원명]
		out.setFeduOccpNm(in.getFeduOccpNm());// set [FW샘플 직업명]
		out.setFeduMngrEmpNo(in.getFeduMngrEmpNo());// set [FW샘플 관리자임직원번호]
		out.setFeduHireDt(in.getFeduHireDt());// set [FW샘플 입사일자]
		out.setFeduPayAmt(in.getFeduPayAmt());// set [FW샘플 급여금액]
		out.setFeduDeptNo(in.getFeduDeptNo());// set [FW샘플 부서번호]
		// Generated by code generator ]]
		
		return out;
	}
	
	@Override
	@BxmCategory(logicalName = "")
	public void write(List<? extends MSmpDBtoDBBatch02Dto> in) throws Exception {
		
		if( dSmpEmpTmp001 == null ) {
			dSmpEmpTmp001 = DefaultApplicationContext.getBean(DSmpEmpTmp001.class);
		}
		
		/**
		 * 		List로 전달된 Item을 Loop 돌면서 DB에 Insert할 DTO를 List 형태로 설정한다.  
		 */
		
		List<DSmpEmpTmp001Dto> dSmpEmpTmp001Dto = new ArrayList<DSmpEmpTmp001Dto>();
		
		for (MSmpDBtoDBBatch02Dto source : in) {
			
			DSmpEmpTmp001Dto inDto = new DSmpEmpTmp001Dto();

			inDto.setFeduEmpNo(source.getFeduEmpNo());// set [FW샘플 임직원번호]
			inDto.setFeduEmpNm(source.getFeduEmpNm());// set [FW샘플 임직원명]
			inDto.setFeduOccpNm(source.getFeduOccpNm());// set [FW샘플 직업명]
			inDto.setFeduMngrEmpNo(source.getFeduMngrEmpNo());// set [FW샘플 관리자임직원번호]
			inDto.setFeduHireDt(source.getFeduHireDt());// set [FW샘플 입사일자]
			inDto.setFeduPayAmt(source.getFeduPayAmt());// set [FW샘플 급여금액]
			inDto.setFeduDeptNo(source.getFeduDeptNo());// set [FW샘플 부서번호]
			
			// 리스트에 추가 
			dSmpEmpTmp001Dto.add(inDto);
		}
		
		/**
		 * insert 처리
		 * - 참고 1 : CONNECTED_BATCH로 C/U/D 처리는 Commit 시점에 bulk로 쿼리가 수행이 된다.
		 * - 참고 2 : CONNECTED_BATCH로 C/U/D 처리는 Commit 시점에 수행이 되기때문에 return 값은 임의의 음수 값이다.(의미 없음)
		 */
		 dSmpEmpTmp001.insert001(dSmpEmpTmp001Dto);
		
	}

	@Override
	@BxmCategory(logicalName = "")
	public void close() throws ItemStreamException {
		
		DasUtils.disconnectDasExecutor(iterator);
	}	
	
}

